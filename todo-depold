---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: todoapp-deploy
  labels: 
    app: todoapp-deploy
  namespace: itodo  
spec:
  replicas: 1
  selector:
    matchLabels:
      app: todoapp
      tier: frontend
  template:
    metadata:
      labels:
        app: todoapp
        tier: frontend
    spec:
      containers:
      - name: todoappcontainer
        #image: mydockybaby/kubeimage:1.0
        image: vdocker0123/todo:HPA01
        #image: mydockybaby/my-private-repo:1.0
        #image: vdocker0123/pvt-todo:HPA01
        #image: mydockybaby/mountvolume:1.0
        ports: 
        - containerPort: 8080
      
        resources:
          limits:
            memory: "128Mi"
            cpu: "500m"
          requests:
            memory: "50Mi"
            cpu: "500m"
        readinessProbe:  
          tcpSocket:
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 10
        livenessProbe:
          httpGet:
            path: /task
            port: 8083
         # tcpSocket:
          #  port: 8080
          initialDelaySeconds: 15
          periodSeconds: 20  

        env:
        - name: DB_HOST
          valueFrom:
            configMapKeyRef:
              name: postgres-config
              key: dbhost
        - name: DB_PORT
          valueFrom:
            configMapKeyRef:
              name: postgres-config
              key: dbport
        - name: DB_NAME
          valueFrom:
            configMapKeyRef:
              name: postgres-config
              key: dbname
        - name: DB_USER
          valueFrom:
            secretKeyRef:
              name: postgres-secret
              key: dbuser
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: postgres-secret
              key: dbpassword
              
     # imagePullSecrets:
     #   - name: regcred        
     
---
apiVersion: v1
kind: Service
metadata:
  name: todoapp-service
  namespace: itodo
spec:
  selector:
    app: todoapp
  ports:
  
  -  port: 8081
     targetPort: 8080
  type: NodePort